("8.8" ta6nt ("16d092143c457e21a02b6ea5c1430cabc4b87798" "11b607d6671fcaefe2a8e725a02021a7c27b36f5" . "14e1e90842119104a36f297c688bae810b8f2ae7") (collects #"math" #"base.rkt") (collects #"math" #"flonum.rkt") (collects #"math" #"private" #"distributions" #"normal-dist.rkt") (collects #"math" #"private" #"functions" #"gamma.rkt") (collects #"math" #"private" #"functions" #"log-gamma.rkt") (collects #"math" #"private" #"functions" #"stirling-error.rkt") (collects #"racket" #"base.rkt") (collects #"racket" #"contract" #"parametric.rkt") (collects #"racket" #"private" #"sort.rkt") (collects #"racket" #"runtime-config.rkt") (collects #"racket" #"runtime-path.rkt") (collects #"racket" #"sequence.rkt") (collects #"typed" #"racket" #"base" #"lang" #"reader.rkt") (collects #"typed" #"racket" #"base.rkt") (collects #"typed-racket" #"env" #"global-env.rkt") (collects #"typed-racket" #"env" #"struct-name-env.rkt") (collects #"typed-racket" #"env" #"type-alias-env.rkt") (collects #"typed-racket" #"env" #"type-name-env.rkt") (collects #"typed-racket" #"private" #"type-contract.rkt") (collects #"typed-racket" #"types" #"abbrev.rkt") (collects #"typed-racket" #"types" #"numeric-tower.rkt") (collects #"typed-racket" #"types" #"struct-table.rkt") (collects #"typed-racket" #"utils" #"any-wrap.rkt") (collects #"typed-racket" #"utils" #"eq-contract.rkt") (collects #"typed-racket" #"utils" #"evt-contract.rkt") (collects #"typed-racket" #"utils" #"hash-contract.rkt") (collects #"typed-racket" #"utils" #"opaque-object.rkt") (collects #"typed-racket" #"utils" #"prefab-c.rkt") (collects #"typed-racket" #"utils" #"promise-not-name-contract.rkt") (collects #"typed-racket" #"utils" #"redirect-contract.rkt") (collects #"typed-racket" #"utils" #"sealing-contract.rkt") (collects #"typed-racket" #"utils" #"shallow-contract.rkt") (collects #"typed-racket" #"utils" #"simple-result-arrow.rkt") (collects #"typed-racket" #"utils" #"struct-type-c.rkt") (collects #"typed-racket" #"utils" #"utils.rkt") (collects #"typed-racket" #"utils" #"vector-contract.rkt") (indirect collects #"syntax" #"define.rkt") (indirect collects #"typed-racket" #"base-env" #"base-env-indexing.rkt") (indirect collects #"typed-racket" #"base-env" #"base-env-numeric.rkt") (indirect collects #"typed-racket" #"base-env" #"base-env.rkt") (indirect collects #"typed-racket" #"base-env" #"base-special-env.rkt") (indirect collects #"typed-racket" #"base-env" #"base-structs.rkt") (indirect collects #"typed-racket" #"core.rkt") (indirect collects #"typed-racket" #"optimizer" #"optimizer.rkt") (indirect collects #"typed-racket" #"rep" #"type-rep.rkt") (indirect collects #"typed-racket" #"typecheck" #"tc-toplevel.rkt") (indirect collects #"typed-racket" #"types" #"overlap.rkt") (indirect collects #"typed-racket" #"types" #"prop-ops.rkt"))
